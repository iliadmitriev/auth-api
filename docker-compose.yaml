version: "3.9"

services:
  redis:
    image: redis:7-alpine
    hostname: auth-redis
    networks:
      - auth
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 64m

  postgres:
    image: postgres:15-alpine
    hostname: auth-postgres
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - auth
    healthcheck:
      test: pg_isready -U auth
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128m

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    image: auth-api
    hostname: auth-api
    environment:
      SECRET_KEY: testsecretkey
      POSTGRES_HOST: auth-postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: auth
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: authsecret
      REDIS_LOCATION: redis://auth-redis:6379/0
    ports:
      - "8080:8080"
    networks:
      - auth
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 128m
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
#    command: >
#      sh -c "
#        alembic upgrade head &&
#        python3 app.py
#      "

volumes:
  pgdata: {}
  redisdata: {}

networks:
  auth:
    name: auth-network